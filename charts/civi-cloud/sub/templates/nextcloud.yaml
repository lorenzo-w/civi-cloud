kind: ConfigMap
apiVersion: v1
metadata:
  name: nextcloud-autoconfig
data:
  setup.sh: |
    #!/bin/bash
    until $(curl --output /dev/null --silent --head --fail -H "Host: {{ .Values.hostname }}" http://localhost:80/status.php); do
      echo 'waiting for nextcloud to start...'
      sleep 5
    done
    echo 'nextcloud is up.'
    echo 'installing apps...'
    for APP in $(cat apps.txt); do
      echo "installing $APP"
      runuser --user www-data -- /var/www/html/occ app:install $APP
    done
    echo 'installing apps... done'
    echo 'loading config.json...'
    runuser --user www-data -- /var/www/html/occ config:import config.json
    echo 'loading config.json... done'
    echo 'nextcloud all set up.'
  apps.txt: | 
    accessibility
    activity
    appointments
    apporder
    approval
    bookmarks
    breezedark
    calendar
    circles
    collectives
    comments
    contacts
    drawio
    duplicatefinder
    electronicsignatures
    encryption
    end_to_end_encryption
    extract
    federation
    files_accesscontrol
    files_automatedtagging
    files_external
    files_fulltextsearch
    files_linkeditor
    files_lock
    files_pdfviewer
    files_rightclick
    files_sharing
    files_trackdownloads
    files_trashbin
    files_versions
    files_videoplayer
    forms
    fulltextsearch
    fulltextsearch_elasticsearch
    groupfolders
    impersonate
    logreader
    mail
    metadata
    notifications
    occweb
    oidc_login
    onlyoffice
    passwords
    photos
    polls
    privacy
    recognize
    recommendations
    rocketchat_nextcloud
    sharebymail
    shifts
    systemtags
    tasks
    text
    theming
    twofactor_totp
    unsplash
    user_ldap
    user_status
    webhooks
  config.json: |
    {
      "apps": {
        "user_ldap": {
          "ldap_base": {{ include "get_sso_config" (dict "key" "ldap_base_dn" "context" $) | quote }},
          "ldap_base_groups": {{ include "get_sso_config" (dict "key" "ldap_groups_dn" "context" $) | quote }},
          "ldap_base_users": {{ include "get_sso_config" (dict "key" "ldap_users_dn" "context" $) | quote }},
          "ldap_cache_ttl": "600",
          "ldap_configuration_active": "1",
          "ldap_display_name": "displayname",
          "ldap_email_attr": "mail",
          "ldap_expert_username_attr": "uid",
          "ldap_group_display_name": "cn",
          "ldap_group_filter": {{ printf "(&(objectclass=%s))" (include "get_sso_config" (dict "key" "ldap_groups_class" "context" $)) | quote }},
          "ldap_group_filter_mode": "0",
          "ldap_groupfilter_objectclass": {{ include "get_sso_config" (dict "key" "ldap_groups_class" "context" $) | quote }},
          "ldap_group_member_assoc_attribute": "member",
          "ldap_host": {{ include "get_sso_config" (dict "key" "ldap_host" "context" $) | quote }},
          "ldap_login_filter": "(&(|(objectclass=inetOrgPerson))(uid=%uid))",
          "ldap_login_filter_mode": "0",
          "ldap_port": {{ include "get_sso_config" (dict "key" "ldap_port" "context" $) | quote }},
          "ldap_quota_attr": "userquota",
          "ldap_tls": "0",
          "ldap_user_display_name": "cn",
          "ldap_user_filter_mode": "0",
          "ldap_userfilter_objectclass": {{ include "get_sso_config" (dict "key" "ldap_users_class" "context" $) | quote }},
          "ldap_userlist_filter": {{ printf "objectclass=%s" (include "get_sso_config" (dict "key" "ldap_users_class" "context" $)) | quote }},
          "types": "authentication",
          "ldap_dn": {{ include "get_sso_config" (dict "key" "ldap_admin_dn" "context" $) | quote }},
          "ldap_agent_password": {{ include "get_sso_config" (dict "key" "ldap_admin_pw" "context" $) | b64enc | quote }}
        },
        "onlyoffice": {
          "DocumentServerInternalUrl": "http://onlyoffice.onlyoffice.svc.cluster.local"
        },
        "files": {
          "default_quota": "1 GB"
        }
      }
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: nextcloud-db
type: Opaque
data:
  mariadb-password: {{ include "common.secrets.passwords.manage" (dict "secret" "nextcloud-db" "key" "mariadb-password" "providedValues" (list "") "context" $) }}
  mariadb-root-password: {{ include "common.secrets.passwords.manage" (dict "secret" "nextcloud-db" "key" "mariadb-root-password" "providedValues" (list "") "context" $) }}
  mariadb-replication-password: {{ include "common.secrets.passwords.manage" (dict "secret" "nextcloud-db" "key" "mariadb-replication-password" "providedValues" (list "") "context" $) }}
  mariadb-username: {{ "nextcloud" | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: nextcloud-admin
type: Opaque
data:
  password: {{ include "common.secrets.passwords.manage" (dict "secret" "nextcloud-admin" "key" "password" "providedValues" (list "") "context" $) }}
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
spec:
  interval: 5m
  chart:
    spec:
      chart: nextcloud
      version: '3.0.0'
      sourceRef:
        kind: HelmRepository
        name: nextcloud
  timeout: 10m0s # Increase timeout to be sure.
  dependsOn:
    - name: sso-clients
  valuesFrom:
    - kind: Secret
      name: nextcloud-admin
      valuesKey: password
      targetPath: "nextcloud.password"
  values:
    ingress:
      enabled: true
      tls:
        - secretName: nextcloud-tls
          hosts:
            - {{ .Values.hostname }}
      annotations:
        cert-manager.io/cluster-issuer: acme
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;

          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
    nextcloud:
      host: {{ .Values.hostname }}
      username: admin
      mail:
        enabled: true
        fromAddress: {{ .Values.smtp.senderAddress }}
        # domain: "?"
        smtp:
          host: {{ .Values.smtp.host }}
          port: {{ .Values.smtp.port }}
          secure: {{ if eq .Values.smtp.tlsMode "ssl" -}}
            "ssl"
            {{- else -}}
            "starttls"
          {{- end }}
          name: {{ .Values.smtp.login }}
          password: {{ .Values.smtp.password }}
      configs:
        oidc.config.php: | 
          <?php
          $CONFIG = array (
            // See here for explanation: https://github.com/pulsejet/nextcloud-oidc-login#config
            'allow_user_to_change_display_name' => false,
            'lost_password_link' => 'disabled',
            'oidc_login_provider_url' => {{ include "get_sso_config" (dict "key" "oidc_issuer_url" "context" $) | quote }},
            'oidc_login_client_id' => {{ .Values.oidcClient.id | quote }},
            'oidc_login_client_secret' => {{ (lookup "v1" "Secret" .Release.Namespace .Values.oidcClient.secretName).data.secret | b64dec | quote }},
            'oidc_login_auto_redirect' => true,
            'oidc_login_end_session_redirect' => false,
            'oidc_login_button_text' => 'Log in with OpenID',
            'oidc_login_hide_password_form' => false,
            'oidc_login_use_id_token' => false,
            'oidc_login_attributes' => array (
                'id' => 'sub',
                'name' => 'name',
                'mail' => 'email',
                'quota' => 'ownCloudQuota',
                'home' => 'homeDirectory',
                'ldap_uid' => 'uid',
                'groups' => 'ownCloudGroups',
                'photoURL' => 'picture',
                'is_admin' => 'ownCloudAdmin',
            ),
            'oidc_login_default_group' => 'oidc',
            'oidc_login_use_external_storage' => false,
            'oidc_login_scope' => 'openid profile groups email',
            'oidc_login_proxy_ldap' => false,
            'oidc_login_disable_registration' => false,
            'oidc_login_redir_fallback' => false,
            'oidc_login_tls_verify' => true,
            'oidc_create_groups' => true
          );
          ?>
        locale.config.php: | 
          <?php
          $CONFIG = array (
            'default_locale' => {{ .Values.org.defaultLocale | quote }},
          );
          ?>
        proxy.config.php: | 
          <?php
          $CONFIG = array (
            'overwriteprotocol' => 'https',
          );
          ?>
      extraVolumes:
        - name: autoconfig
          configMap:
            name: nextcloud-autoconfig
      extraVolumeMounts:
        - name: autoconfig
          mountPath: /autoconfig
          readOnly: true
    lifecycle:
      postStartCommand: ["/bin/bash", "-c", "(cd /autoconfig; bash setup.sh)"]
    # mariadb:
    #   enabled: true
    #   auth:
    #     database: nextcloud
    #     existingSecret: nextcloud-db
    #   primary:
    #     persistence:
    #       enabled: true
    cronjob:
      enabled: true
    persistence:
      enabled: true
