apiVersion: v1
kind: Secret
metadata:
  name: rocketchat-db
type: Opaque
data:
  mongodb-password: {{ include "common.secrets.passwords.manage" (dict "secret" "rocketchat-db" "key" "mongodb-password" "providedValues" (list "") "context" $) }}
  mongodb-rootPassword: {{ include "common.secrets.passwords.manage" (dict "secret" "rocketchat-db" "key" "mongodb-rootPassword" "providedValues" (list "") "context" $) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: rocketchat-admin
type: Opaque
data:
  password: {{ include "common.secrets.passwords.manage" (dict "secret" "rocketchat-admin" "key" "password" "providedValues" (list "") "context" $) }}
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rocketchat
spec:
  interval: 5m
  chart:
    spec:
      chart: rocketchat
      version: '4.7.4'
      sourceRef:
        kind: HelmRepository
        name: rocketchat-server
  dependsOn:
    - name: sso-clients
  valuesFrom:
    - kind: Secret
      name: rocketchat-db
      valuesKey: mongodb-password
      targetPath: "mongodb.auth.password"
    - kind: Secret
      name: rocketchat-db
      valuesKey: mongodb-rootPassword
      targetPath: "mongodb.auth.rootPassword"
  values:
    {{ $host := .Values.hostnames.rocketchat -}}
    host: {{ $host }}
    smtp:
      enabled: true
      username: {{ .Values.smtp.login | quote }}
      password: {{ .Values.smtp.password | quote }}
      host: {{ .Values.smtp.host }}
      port: {{ .Values.smtp.port }}
    persistence:
      enabled: true
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: acme
      tls:
        - hosts:
            - {{ $host }}
          secretName: rocketchat-cert
    extraEnv: | 
      - name: ADMIN_USERNAME
        value: admin
      - name: ADMIN_PASS
        valueFrom:
          secretKeyRef:
            name: rocketchat-admin
            key: password
      - name: ADMIN_EMAIL
        value: {{ include "get_sso_config" (dict "key" "admin_email" "context" $) }}
      - name: E2E_Enable
        value: "true"
      - name: Accounts_RegistrationForm
        value: Disabled
      - name: OVERWRITE_SETTING_Show_Setup_Wizard
        value: completed
      
      # - name: OVERWRITE_SETTING_LDAP_Enable
      #   value: "true"
      # - name: OVERWRITE_SETTING_LDAP_Server_Type
      #   value: ""
      # - name: OVERWRITE_SETTING_LDAP_Host
      #   value: {{ include "get_sso_config" (dict "key" "ldap_host" "context" $) }}
      # - name: OVERWRITE_SETTING_LDAP_Port
      #   value: {{ include "get_sso_config" (dict "key" "ldap_port" "context" $) | quote }}
      # - name: OVERWRITE_SETTING_LDAP_Reconnect
      #   value: "true"
      # - name: OVERWRITE_SETTING_LDAP_Login_Fallback
      #   value: "false"
      # - name: OVERWRITE_SETTING_LDAP_Authentication
      #   value: "true"
      # - name: OVERWRITE_SETTING_LDAP_Authentication_UserDN
      #   value: {{ include "get_sso_config" (dict "key" "ldap_admin_dn" "context" $) | quote }}
      # - name: OVERWRITE_SETTING_LDAP_Authentication_Password
      #   value: {{ include "get_sso_config" (dict "key" "ldap_admin_pw" "context" $) | quote }}
      # - name: OVERWRITE_SETTING_LDAP_Find_User_After_Login
      #   value: "true"
      # - name: OVERWRITE_SETTING_LDAP_BaseDN
      #   value: {{ include "get_sso_config" (dict "key" "ldap_users_dn" "context" $) | quote }}
      # - name: OVERWRITE_SETTING_LDAP_User_Search_Field
      #   value: "uid"
      # - name: OVERWRITE_SETTING_LDAP_Merge_Existing_Users
      #   value: "true"
      # - name: OVERWRITE_SETTING_LDAP_Update_Data_On_Login
      #   value: "true"
      # - name: OVERWRITE_SETTING_LDAP_Username_Field
      #   value: "uid"

      - name: Accounts_OAuth_Custom-Keycloak
        value: "true"
      - name: Accounts_OAuth_Custom-Keycloak-url
        value: {{ include "get_sso_config" (dict "key" "oidc_issuer_url" "context" $) }}
      - name: Accounts_OAuth_Custom-Keycloak-token_path
        value: {{ include "get_sso_config" (dict "key" "oidc_token_path" "context" $) }}
      - name: Accounts_OAuth_Custom-Keycloak-identity_path
        value: {{ include "get_sso_config" (dict "key" "oidc_userinfo_path" "context" $) }}
      - name: Accounts_OAuth_Custom-Keycloak-authorize_path
        value: {{ include "get_sso_config" (dict "key" "oidc_auth_path" "context" $) }}
      - name: Accounts_OAuth_Custom-Keycloak-token_sent_via
        value: Header
      - name: Accounts_OAuth_Custom-Keycloak-scope
        value: "openid profile groups email"
      - name: Accounts_OAuth_Custom-Keycloak-id
        value: civi-oidc
      - name: Accounts_OAuth_Custom-Keycloak-secret
        value: {{ (lookup "v1" "Secret" .Release.Namespace .Values.oidcClient.secretName).data.secret | b64dec | quote }}
      - name: Accounts_OAuth_Custom-Keycloak-login_style
        value: Redirect
      - name: Accounts_OAuth_Custom-Keycloak-button_label_text
        value: {{ printf "%s Login" .Values.org.name | quote }}
      - name: Accounts_OAuth_Custom-Keycloak-map_channels
        value: "true"
      - name: Accounts_OAuth_Custom-Keycloak-merge_roles
        value: "true"
      - name: Accounts_OAuth_Custom-Keycloak-merge_users
        value: "true"
      - name: Accounts_OAuth_Custom-Keycloak-roles_to_sync
        value: {{ include "get_sso_config" (dict "key" "admin_group" "context" $) | quote }}
      - name: Accounts_OAuth_Custom-Keycloak-groups_channel_map
        value: |
          {
            {{ include "get_sso_config" (dict "key" "admin_group" "context" $) | quote }}: "admin"
          }
