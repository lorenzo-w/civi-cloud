apiVersion: v1
kind: Secret
metadata:
  name: discourse
type: Opaque
data:
  admin-password: {{ include "common.secrets.passwords.manage" (dict "secret" "discourse" "key" "admin-password" "providedValues" (list "") "context" $) }}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: discourse-autoconfig
data:
  setup.sh: |
    #!/bin/bash
    until $(curl --output /dev/null --silent --head --fail http://localhost:8080); do
      echo 'waiting for discourse to start...'
      sleep 5
    done
    echo 'discourse is up.'

    echo 'installing plugins...'
    # See: https://github.com/bitnami/charts/issues/4624#issuecomment-740565085
    cd /opt/bitnami/discourse
    for PLUGIN in $(cat plugins.txt); do
      RAILS_ENV=production bundle exec rake plugin:install repo=$PLUGIN
      RAILS_ENV=production bundle exec rake assets:precompile
    done
    echo 'installing plugins... done'

    echo 'discourse all set up.'
  plugins.txt: | 
    https://github.com/discourse/discourse-saml.git
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: discourse
spec:
  interval: 5m
  chart:
    spec:
      chart: discourse
      version: '7.3.2'
      sourceRef:
        kind: HelmRepository
        name: bitnami
  timeout: 10m0s # Increase timeout to be sure.
  dependsOn:
    - name: sso-clients
  valuesFrom:
    - kind: Secret
      name: discourse
      valuesKey: admin-password
      targetPath: "auth.password"
  values:
    {{ $host := include "get_hostname" (dict "service" "discourse" "context" $) -}}
    ingress:
      enabled: true
      hostname: {{ $host }}
      tls: true
      annotations:
        cert-manager.io/cluster-issuer: acme
    auth:
      username: admin
      email: {{ include "get_sso_config" (dict "key" "admin_email" "context" $) }}
    host: {{ $host }}
    siteName: {{ .Values.org.name | quote }}
    smtp:
      enabled: true
      host: {{ .Values.smtp.host }}
      port: {{ .Values.smtp.port | quote }}
      user: {{ .Values.smtp.login | quote }}
      password: {{ .Values.smtp.password | quote }}
      protocol: {{ .Values.smtp.tlsMode }}
      auth: ""
    extraVolumes:
      - name: autoconfig
        configMap:
          name: discourse-autoconfig
    extraVolumeMounts:
      - name: autoconfig
        mountPath: /autoconfig
        readOnly: true
    discourse:
      lifecycleHooks:
        postStart:
          exec:
            command: ["/bin/sh", "-c", "cd /autoconfig & ./setup.sh"]
      extraEnvVars:
        # See: https://github.com/discourse/discourse-saml#configuration
        - name: DISCOURSE_SAML_TARGET_URL
          value: {{ include "get_sso_config" (dict "key" "saml_entrypoint_url" "context" $) }}
        - name: DISCOURSE_SAML_CERT_FINGERPRINT
          value: "" # TODO: Find out if needed
        - name: DISCOURSE_SAML_REQUEST_METHOD
          value: "post"
        - name: DISCOURSE_SAML_FULL_SCREEN_LOGIN
          value: "true"
        - name: DISCOURSE_SAML_CERT
          value: {{ index (lookup "v1" "Secret" .Values.ssoConfig.namespace (include "get_sso_config" (dict "key" "idp_cert_secret" "context" $))).data "tls.crt" | b64dec }}
        - name: DISCOURSE_SAML_SYNC_GROUPS
          value: "true"
        - name: DISCOURSE_SAML_GROUPS_ATTRIBUTE
          value: "memberOf"
        - name: DISCOURSE_SAML_BUTTON_TITLE
          value: "SAML Login"
        - name: DISCOURSE_SAML_SYNC_MODERATOR
          value: "true"
        - name: DISCOURSE_SAML_MODERATOR_ATTRIBUTE
          value: "isModerator"
        - name: DISCOURSE_SAML_SYNC_ADMIN
          value: "true"
        - name: DISCOURSE_SAML_ADMIN_ATTRIBUTE
          value: "isAdmin"
